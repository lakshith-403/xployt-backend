package com.xployt.controller.hacker;

import com.google.gson.Gson;
import com.xployt.model.GenericResponse;
import com.xployt.model.VulnerabilityReport;
import com.xployt.service.common.VulnerabilityReportService;
import com.xployt.util.CustomLogger;
import com.xployt.util.JsonUtil;

import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

@WebServlet("/api/report/vulnerability/*")
public class HackerVulnerabilityReportServlet extends HttpServlet {
    private VulnerabilityReportService vulnerabilityReportService;
    private static final Logger logger = CustomLogger.getLogger();

    @Override
    public void init() {
        vulnerabilityReportService = new VulnerabilityReportService();
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException {
        logger.info("Saving report");

        Gson gson = JsonUtil.useGson();

        VulnerabilityReport report = gson.fromJson(request.getReader(), VulnerabilityReport.class);

        GenericResponse result;
        try {
            result = vulnerabilityReportService.createVulnerabilityReport(report);
        } catch (Exception e) {
            logger.log(Level.SEVERE, "Error creating VulnerabilityReport", e);
            response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, "Error creating VulnerabilityReport");
            return;
        }

        response.setContentType("application/json");
        response.setCharacterEncoding("UTF-8");
        response.getWriter().write(gson.toJson(result));
    }
}
